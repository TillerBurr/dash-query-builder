name: Tests
on:
    push:
        branches:
            - main
    pull_request:
        types:
            - opened
            - synchronize

jobs:
    changes:
        runs-on: ubuntu-latest
        permissions:
            pull-requests: read
        outputs:
            python: ${{ steps.filter.outputs.python}}
        steps:
            - uses: actions/checkout@v4
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      python:
                        - 'tests/**'
                        - 'dash_query_builder/**'
            - id: debug
              run: |
                  echo "${{toJSON(steps.filter)}}"

    lint:
        runs-on: ubuntu-latest
        needs: changes
        if: ${{needs.changes.outputs.python== 'true'}}
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.11'
                  # Issue ref: https://github.com/actions/setup-python/issues/436
                  # cache: "pip"
                  # cache-dependency-path: pyproject.toml
            - uses: actions/cache@v4
              id: cache
              with:
                  path: ${{ env.pythonLocation }}
                  key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'requirements-dev.txt'}}-test
            - name: Install Dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: pip install -r requirements-dev.txt
            - name: Lint
              run: ruff dash_query_builder tests
            - name: Format
              run: ruff format dash_query_builder tests --check

    tests:
        runs-on: ubuntu-latest
        needs: [changes, lint]
        if: ${{needs.changes.outputs.python == 'true'}}
        strategy:
            matrix:
                python-version: [3.8, 3.9, '3.10', '3.11', '3.12']
        steps:
            - uses: actions/checkout@v4
            - name: setup python
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}
            - uses: actions/cache@v4
              id: cache
              with:
                  path: ${{ env.pythonLocation }}
                  key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'requirements-dev.txt') }}-test
            - name: Install Dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: pip install -r requirements-dev.txt
            - name: Test
              run: pytest
